{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/yazeed/Documents/coding/apps/textingApp/nativeApp/components/Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport style from \"./style\";\nimport { sendMessage } from \"../firebase\";\nimport { database } from 'firebase';\n\nvar Example = function (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  var _super = _createSuper(Example);\n\n  function Example() {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      database().ref('/chat/' + this.props.roomId).on('value', function (payload) {\n        _this2.setState({\n          messages: payload.val()\n        });\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var chat = GiftedChat.append(this.state.messages, messages);\n      chat[0].createdAt = new Date();\n      sendMessage(chat);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(GiftedChat, {\n        messagesContainerStyle: style.widthFull,\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this3.onSend(messages);\n        },\n        user: {\n          _id: this.props.userId\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/yazeed/Documents/coding/apps/textingApp/nativeApp/components/Chat.js"],"names":["React","GiftedChat","style","sendMessage","database","Example","state","messages","ref","props","roomId","on","payload","setState","val","chat","append","createdAt","Date","widthFull","onSend","_id","userId","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP;AACA,SAAQC,WAAR;AACA,SAASC,QAAT,QAAyB,UAAzB;;IACqBC,O;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;wCAIY;AAAA;;AAElBH,MAAAA,QAAQ,GAAGI,GAAX,CAAe,WAAS,KAAKC,KAAL,CAAWC,MAAnC,EAA2CC,EAA3C,CAA8C,OAA9C,EAAuD,UAAAC,OAAO,EAAI;AAC9D,QAAA,MAAI,CAACC,QAAL,CAAc;AAACN,UAAAA,QAAQ,EAAEK,OAAO,CAACE,GAAR;AAAX,SAAd;AACH,OAFD;AAID;;;6BAEqB;AAAA,UAAfP,QAAe,uEAAJ,EAAI;AAIpB,UAAIQ,IAAI,GAAGd,UAAU,CAACe,MAAX,CAAkB,KAAKV,KAAL,CAAWC,QAA7B,EAAuCA,QAAvC,CAAX;AACAQ,MAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQE,SAAR,GAAoB,IAAIC,IAAJ,EAApB;AACAf,MAAAA,WAAW,CAACY,IAAD,CAAX;AAED;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,UAAD;AACE,QAAA,sBAAsB,EAAEb,KAAK,CAACiB,SADhC;AAEE,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWC,QAFvB;AAGE,QAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,iBAAI,MAAI,CAACa,MAAL,CAAYb,QAAZ,CAAJ;AAAA,SAHlB;AAIE,QAAA,IAAI,EAAE;AACJc,UAAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWa;AADZ,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EAnCkCtB,KAAK,CAACuB,S;;SAAtBlB,O","sourcesContent":["import React from 'react'\nimport { GiftedChat } from 'react-native-gifted-chat'\nimport style from './style'\nimport {sendMessage} from '../firebase'\nimport { database } from 'firebase'\nexport default class Example extends React.Component {\n  state = {\n    messages: [],\n  }\n \n  componentDidMount() {\n\n    database().ref('/chat/'+this.props.roomId).on('value', payload => {\n        this.setState({messages: payload.val()})\n    })\n       \n  }\n \n  onSend(messages = []) {\n    // this.setState(previousState => ({\n    //   messages: ,\n    // }))\n    let chat = GiftedChat.append(this.state.messages, messages)\n    chat[0].createdAt = new Date()\n    sendMessage(chat)\n\n  }\n \n  render() {\n    return (\n      <GiftedChat\n        messagesContainerStyle={style.widthFull}\n        messages={this.state.messages}\n        onSend={messages => this.onSend(messages)}\n        user={{\n          _id: this.props.userId\n        }}\n\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}