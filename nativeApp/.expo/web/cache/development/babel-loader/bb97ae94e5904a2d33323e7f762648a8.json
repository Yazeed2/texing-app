{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/yazeed/Documents/coding/apps/textingApp/nativeApp/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Chat from \"./components/Chat\";\nimport Loading from \"./components/loading/Loading\";\nimport { auth } from 'firebase';\nimport { waitingList, getRoomId } from \"./firebase\";\nimport Home from \"./components/Home\";\nexport default function App() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    auth().signInAnonymously().catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorMessage);\n    });\n    auth().onAuthStateChanged(function (user) {\n      if (user) {\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n        console.log('heys');\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          userId: user.uid\n        }));\n      }\n    });\n  }, []);\n\n  var serRoom = function serRoom(roomId) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      roomID: roomID\n    }));\n  };\n\n  var startChat = function startChat() {\n    var roomId;\n    return _regeneratorRuntime.async(function startChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setState(_objectSpread(_objectSpread({}, state), {}, {\n              searching: true\n            }));\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(waitingList(state.userId));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(getRoomId(state.userId, setRoom));\n\n          case 5:\n            roomId = _context.sent;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, state.userId && !state.searching && !state.roomId ? React.createElement(Home, {\n    callback: startChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }) : React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }), state.roomId && state.userId ? React.createElement(Chat, {\n    userId: state.userId,\n    roomId: state.roomId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 36\n    }\n  }) : React.createElement(React.Fragment, null));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 200,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/yazeed/Documents/coding/apps/textingApp/nativeApp/App.js"],"names":["React","useEffect","useState","Chat","Loading","auth","waitingList","getRoomId","Home","App","state","setState","signInAnonymously","catch","error","errorCode","code","errorMessage","message","console","log","onAuthStateChanged","user","isAnonymous","uid","userId","serRoom","roomId","roomID","startChat","searching","setRoom","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;;;;;;AAGA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAAQC,IAAR,QAAmB,UAAnB;AACA,SAAQC,WAAR,EAAqBC,SAArB;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACFP,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,MACrBQ,KADqB;AAAA,MACdC,QADc;;AAE5BV,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,IAAI,GAAGO,iBAAP,GAA2BC,KAA3B,CAAiC,UAASC,KAAT,EAAgB;AAE/C,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD,KAND;AAQAZ,IAAAA,IAAI,GAAGgB,kBAAP,CAA0B,UAASC,IAAT,EAAe;AACvC,UAAIA,IAAJ,EAAU;AAER,YAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;AACA,YAAIC,GAAG,GAAGF,IAAI,CAACE,GAAf;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAT,QAAAA,QAAQ,iCAAKD,KAAL;AAAYe,UAAAA,MAAM,EAAEH,IAAI,CAACE;AAAzB,WAAR;AAID;AAEF,KAZD;AAaD,GAtBQ,EAsBN,EAtBM,CAAT;;AAuBA,MAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAAW;AACzBhB,IAAAA,QAAQ,iCAAKD,KAAL;AAAakB,MAAAA,MAAM,EAANA;AAAb,OAAR;AACD,GAFD;;AAGA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBlB,YAAAA,QAAQ,iCAAKD,KAAL;AAAYoB,cAAAA,SAAS,EAAE;AAAvB,eAAR;AADgB;AAAA,6CAEVxB,WAAW,CAACI,KAAK,CAACe,MAAP,CAFD;;AAAA;AAAA;AAAA,6CAGGlB,SAAS,CAACG,KAAK,CAACe,MAAP,EAAeM,OAAf,CAHZ;;AAAA;AAGZJ,YAAAA,MAHY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGCvB,KAAK,CAACe,MAAN,IAAgB,CAACf,KAAK,CAACoB,SAAvB,IAAoC,CAACpB,KAAK,CAACiB,MAA3C,GACC,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALH,EAOEnB,KAAK,CAACiB,MAAN,IAAgBjB,KAAK,CAACe,MAAtB,GAA6B,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAGf,KAAK,CAACe,MAArB;AAA6B,IAAA,MAAM,EAAEf,KAAK,CAACiB,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,GAAqF,yCAPvF,CADF;AAWD;AAED,IAAMK,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,GADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\n// import Texting from './components/Texting'\nimport Chat from './components/Chat'\nimport Loading from './components/loading/Loading'\nimport {auth} from 'firebase'\nimport {waitingList, getRoomId} from './firebase'\nimport Home from './components/Home'\n\nexport default function App() {\n  const [state, setState] = useState({})\n  useEffect(() => {\n    auth().signInAnonymously().catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // ...\n      console.log(errorMessage)\n    })\n\n    auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // User is signed in.\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n        console.log('heys')\n        setState({...state, userId: user.uid})\n\n      \n            // ...\n      }\n      // ...\n    });\n  }, [])\n  const serRoom = (roomId)=> {\n    setState({...state,  roomID})\n  }\n  const startChat = async () => {\n    setState({...state, searching: true})\n    await waitingList(state.userId)\n    let roomId = await getRoomId(state.userId, setRoom)\n    \n    \n    \n  }\n  return (\n    <View style={styles.container}>\n   {/* <Texting /> \n    */}\n    {state.userId && !state.searching && !state.roomId? \n      <Home callback={startChat} />\n     : <Loading/>}\n  \n     {state.roomId && state.userId?<Chat userId ={state.userId} roomId={state.roomId} /> : <></> }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 200,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}